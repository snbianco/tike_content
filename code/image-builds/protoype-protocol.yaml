# I added a few ideas but this is your spec so what we end up
# with should be what is good for notebook users.   To that end
# it's OK to go back to your original format but here is what
# came to mind for YAML.

image_spec_header:
- image_name: TIKE 2025.05

- description: |
  A block of text can be inserted here if desired,  optional.
  Potentially this or another field could also be on the spawner page.
- valid_on: 2025-05-12
- expires_on: 2025-12-31
- nb_repo: https://github.com/spacetelescope/tike_content
- root_nb_directory: content/notebooks/

- python_version: 3.12.9

selected_notebooks:
- directories:
    - include_subdirs:
      - data-access/
      - lcviz-tutorial/
      - tglc/
      - zooniverse_view_lightcurve/

- directories:
    - root_nb_directory: content/notebooks/
    - include_subdirs:
      - .
    - exclude_subdirs:
      - aas-245/
      - tesscut-in-the-cloud/
      - webinar-series/

# ---
# It will be understood that directories are recursively included
# but need only be one level deep if desired.
# They are assumed to be relative extensions of root_nb_directory.

# ---
# To define the basic environment,  the simplest form is the
# "python_version" directive which merely defines the Python version.
# Any other tools required to build Python extensions (e.g. gcc or
# lapack or fftw or cython) can be chosen arbitrarily by the
# science-platform-images build system.
#
# A requirements.txt file at any level of the specified directories
#   will be included in the union of image requirements and for the
#   purposes of the build renamed to something which identifies its
#   directory-of-origin
#
# include_subdirs *could* default to [ . ]
# exclude_subdirs *could* default to []
#
# root_nb_directory can be specified in the image_spec_header as default
#   or for each directory block as an override.
# root_nb_directory defaults to "" meaning top-of-repo (could also be /)
#
# ---
# Planned outputs from science-platform-images:
# 1. Comprehensive pip package list  (pip-tools output)
# 2. Notebook package union,  with requirements resolution
# 3. Full conda spec for environment which will include Python + base tools
#
